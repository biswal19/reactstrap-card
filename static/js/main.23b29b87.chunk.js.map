{"version":3,"sources":["assets/image/256x186.svg","Nav.js","LandingPage.js","Footer.js","App.js","serviceWorker.js","index.js","assets/image/318x180.svg"],"names":["module","exports","Example","props","useState","isOpen","setIsOpen","className","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","LandingPage","FooterPage","fluid","Date","getFullYear","App","CardDeck","Card","CardImg","top","width","src","img1","alt","CardBody","CardTitle","CardText","Button","Row","Col","md","img2","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23b29b87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/256x186.a399e1d0.svg\";","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  \n} from 'reactstrap';\n\nconst Example = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div className=\"Nav\">\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\"><b>3M</b>Innovation</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/components/\">Home</NavLink>\n            </NavItem>\n            \n            <NavItem>\n              <NavLink href=\"/components/\">Innovation Stories</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/components/\">Technology</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/components/\">Connect with 3M</NavLink>\n            </NavItem>\n            \n          </Nav>\n         \n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Example;","import React from 'react'\n\nconst LandingPage = () => {\n    return (\n        <div className=\"banner-text\">\n            <header>\n            <h2>\n            <b>\n            Innovation Story Landing\n            </b>\n            </h2>\n            <p>\n            Ipsum has been the industry's standard dummy text ever since the 1500s,\n            when an  printer took a galley of type and scrambled it to make a type specimen book.\n            </p>\n            </header>\n        </div>\n    )\n}\nexport default LandingPage;\n","import React from \"react\";\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\n\nconst FooterPage = () => {\n  return (\n    <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4\">\n      <MDBContainer fluid className=\"text-center text-md-left\">\n          <b>3M</b>HTML|CSS|REACT|REACTSTRAP|BOOTSTRAP|JAVA\n      </MDBContainer>\n      <div className=\"footer-copyright text-right py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.mdbootstrap.com\"> All Rights Reserved</a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default FooterPage;\n","import React from 'react';\nimport './App.css';\nimport {\n  Card, CardImg, CardText, CardBody, CardDeck,\n  CardTitle, Button,\n  Row, Col\n} from 'reactstrap';\nimport img1 from './assets/image/318x180.svg'\nimport img2 from './assets/image/256x186.svg'\nimport TopNav from './Nav';\nimport LandingPage from './LandingPage';\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <div className=\"card-text-center\">\n    \n      <div className=\"overflow\">\n      <TopNav />\n      <LandingPage />  \n      \n     \n        <CardDeck>\n          <Card>\n          <CardImg top width=\"100%\" src={img1} alt=\"Image 1\" />\n            <CardBody>\n              <CardTitle>Tier 1 Story Headline</CardTitle>\n              <CardText>This is a wider card with supporting text.</CardText>\n              <Button>View</Button>\n            </CardBody>\n          </Card>\n          <Card>\n          <CardImg top width=\"100%\" src={img1} alt=\"Image 1\" />\n            <CardBody>\n              <CardTitle>Tier 1 Story Headline</CardTitle>\n              <CardText>This is a wider card with supporting text.</CardText>\n              <Button>View</Button>\n            </CardBody>\n          </Card>\n          <Card>\n          <CardImg top width=\"100%\" src={img1} alt=\"Image 1\" />\n            <CardBody>\n              <CardTitle>Tier 1 Story Headline</CardTitle>\n              <CardText>This is a wider card with supporting text.</CardText>\n              <Button>View</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n        <CardDeck>\n          <Card>\n          <CardImg top width=\"100%\" src={img1} alt=\"Image 1\" />\n            <CardBody>\n              <CardTitle>Tier 1 Story Headline</CardTitle>\n              <CardText>This is a wider card with supporting text.</CardText>\n              <Button>View</Button>\n            </CardBody>\n          </Card>\n          <Card>\n          <CardImg top width=\"100%\" src={img1} alt=\"Image 1\" />\n            <CardBody>\n              <CardTitle>Tier 1 Story Headline</CardTitle>\n              <CardText>This is a wider card with supporting text.</CardText>\n              <Button>View</Button>\n            </CardBody>\n          </Card>\n          <Card>\n          <CardImg top width=\"100%\" src={img1} alt=\"Image 1\" />\n            <CardBody>\n              <CardTitle>Tier 1 Story Headline</CardTitle>\n              <CardText>This is a wider card with supporting text.</CardText>\n              <Button>View</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n        <Row>\n        <Col>\n          <Card>\n            <Row className=\"no-gutters\">\n              <Col md=\"4\">\n                <CardImg\n                  top\n                  width=\"100%\"\n                  src={img2}\n                  alt=\"Image 2\"\n                />\n              </Col>\n              <Col md=\"8\">\n                <CardBody>\n                  <CardTitle>Tier 2 Story Headline</CardTitle>\n                  <CardText>\n                    Some quick example text to build on the card title.\n                  </CardText>\n                  <Button>View</Button>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col>\n          <Card>\n            <Row className=\"no-gutters\">\n              <Col md=\"4\">\n                <CardImg\n                  top\n                  width=\"100%\"\n                  src={img2}\n                  alt=\"Image 2\"\n                />\n              </Col>\n              <Col md=\"8\">\n                <CardBody>\n                  <CardTitle>Tier 2 Story Headline</CardTitle>\n                  <CardText>\n                    Some quick example text to build on the card title.\n                  </CardText>\n                  <Button>View</Button>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col>\n          <Card>\n            <Row className=\"no-gutters\">\n              <Col md=\"4\">\n                <CardImg\n                  top\n                  width=\"100%\"\n                  src={img2}\n                  alt=\"Image 2\"\n                />\n              </Col>\n              <Col md=\"8\">\n                <CardBody>\n                  <CardTitle>Tier 2 Story Headline</CardTitle>\n                  <CardText>\n                    Some quick example text to build on the card title.\n                  </CardText>\n                  <Button>View</Button>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <Row className=\"no-gutters\">\n              <Col md=\"4\">\n                <CardImg\n                  top\n                  width=\"100%\"\n                  src={img2}\n                  alt=\"Image 2\"\n                />\n              </Col>\n              <Col md=\"8\">\n                <CardBody>\n                  <CardTitle>Tier 2 Story Headline</CardTitle>\n                  <CardText>\n                    Some quick example text to build on the card title.\n                  </CardText>\n                  <Button>View</Button>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col>\n          <Card>\n            <Row className=\"no-gutters\">\n              <Col md=\"4\">\n                <CardImg\n                  top\n                  width=\"100%\"\n                  src={img2}\n                  alt=\"Image 2\"\n                />\n              </Col>\n              <Col md=\"8\">\n                <CardBody>\n                  <CardTitle>Tier 2 Story Headline</CardTitle>\n                  <CardText>\n                    Some quick example text to build on the card title.\n                  </CardText>\n                  <Button>View</Button>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col>\n          <Card>\n            <Row className=\"no-gutters\">\n              <Col md=\"4\">\n                <CardImg\n                  top\n                  width=\"100%\"\n                  src={img2}\n                  alt=\"Image 2\"\n                />\n              </Col>\n              <Col md=\"8\">\n                <CardBody>\n                  <CardTitle>Tier 2 Story Headline</CardTitle>\n                  <CardText>\n                    Some quick example text to build on the card title.\n                  </CardText>\n                  <Button>View</Button>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <Row className=\"no-gutters\">\n              <Col md=\"4\">\n                <CardImg\n                  top\n                  width=\"100%\"\n                  src={img2}\n                  alt=\"Image 2\"\n                />\n              </Col>\n              <Col md=\"8\">\n                <CardBody>\n                  <CardTitle>Tier 2 Story Headline</CardTitle>\n                  <CardText>\n                    Some quick example text to build on the card title.\n                  </CardText>\n                  <Button>View</Button>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col>\n          <Card>\n            <Row className=\"no-gutters\">\n              <Col md=\"8\">\n                <CardBody>\n                  <CardTitle>Tier 3 Story Headline</CardTitle>\n                  <CardText>\n                    Some quick example text to build on the card title.\n                  </CardText>\n                  <Button>View</Button>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col>\n          <Card>\n            <Row className=\"no-gutters\">\n              <Col md=\"8\">\n                <CardBody>\n                  <CardTitle>Tier 3 Story Headline</CardTitle>\n                  <CardText>\n                    Some quick example text to build on the card title.\n                  </CardText>\n                  <Button>View</Button>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/318x180.d5ff1945.svg\";"],"sourceRoot":""}